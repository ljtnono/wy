<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>

    <!--指定特定数据库的jdbc驱动jar包的位置 -->
    <classPathEntry location="E:\repository\mysql\mysql-connector-java\8.0.11\mysql-connector-java-8.0.11.jar" />
                                <!-- 运行环境-->
    <context id="wy" targetRuntime="MyBatis3" >
        <!-- 是否去除自动生成的注释 true：是  false：否 -->
        <commentGenerator>
            <property name="supressAllcomments" value="true" />
        </commentGenerator>

        <!--jdbc的数据库连接 数据源 -->
        <jdbcConnection
                driverClass="com.mysql.cj.jdbc.Driver"
                connectionURL="jdbc:mysql://118.89.247.210:3306/wy?characterEncoding=utf8&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true&amp;useSSL=false"
                userId="root"
                password="ljtLJT715336">
        </jdbcConnection>

        <!--
        默认false，把JDBC DECIMAL 和 NUMERIC类型解析为Integer，为true
        时把JDBC DECIMAL 和 NUMERIC 类型解析为 java.math.BigDecimal
        -->
        <javaTypeResolver >
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        <javaModelGenerator targetPackage="cn.ljtnono.wyapp.entity" targetProject="src/main/java">
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>

            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>

            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <sqlMapGenerator targetPackage="cn.ljtnono.wyapp.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator targetPackage="cn.ljtnono.wyapp.mapper" targetProject="src/main/java" type="ANNOTATEDMAPPER">
            <property name="enableSubPackages" value=""/>
            <!--
                    定义Maper.java 源代码中的ByExample() 方法的可视性，可选的值有：
                    public;
                    private;
                    protected;
                    default
                    注意：如果 targetRuntime="MyBatis3",此参数被忽略
             -->
            <property name="exampleMethodVisibility" value=""/>
            <!--
                                           方法名计数器
              Important note: this property is ignored if the target runtime is MyBatis3.
             -->
            <property name="methodNameCalculator" value=""/>

            <!--
                                                为生成的接口添加父接口
             -->
            <property name="rootInterface" value=""/>

        </javaClientGenerator>

        <table tableName="wy_user" schema=""/>
        <table tableName="wy_image" schema=""/>
        <table tableName="wy_lawyer" schema=""/>
        <table tableName="wy_permission" schema=""/>
        <table tableName="wy_user_role" schema=""/>
        <table tableName="wy_role_permission" schema=""/>
        <table tableName="wy_role" schema=""/>
    </context>
</generatorConfiguration>